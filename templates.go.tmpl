package {{ .PackageName }}

// This package has been automatically generated with temple.
// Do not edit manually!

import (
	"html/template"
	"strings"
)

var (
	Templates = map[string]*template.Template { {{ range .Templates }}
		"{{ .Name }}": template.Must(template.New("{{ .Name }}").Parse(`{{ .Source }}`)),{{ end }}
	}
	{{ if .Views }}
	Views = map[string]*template.Template { {{ range .Views }}
		strings.TrimPrefix("{{ . }}", "views/"): Templates["{{ . }}"],{{ end }}
	}
	{{ end }}
	{{ if .Includes }}
	Includes = map[string]*template.Template { {{ range .Includes }}
		strings.TrimPrefix("{{ . }}", "includes/"): Templates["{{ . }}"],{{ end }}
	}
	{{ end }}
	{{ if .Layouts }}
	Layouts = map[string]*template.Template { {{ range .Layouts }}
		strings.TrimPrefix("{{ . }}", "layouts/"): Templates["{{ . }}"],{{ end }}
	}
	{{ end }}
)

{{ if or .Views .Includes .Layouts }}
func init() {
	var err error
	
	{{ if .Includes }}
	// Add each include to the parse tree of every other include
	for _, include := range Includes {
		for _, other := range Includes {
			if include.Name() == other.Name() {
				continue
			}
			// Add other to include's parse tree only if it has not already been
			// added by association.
			// TODO: is there a more effecient way to do this?
			if include.Lookup(other.Name()) == nil {
				Includes[include.Name()], err = include.AddParseTree(other.Name(), other.Tree)
				if err != nil {
					panic(err)
				}
			}
		}
	}{{ end }}

	{{ if and .Includes .Views (not .Layouts) }}
	// Add each include to the parse tree of every view
	for _, include := range Includes {
		for _, view := range Views {
			Views[view.Name()], err = view.AddParseTree(include.Name(), include.Tree)
			if err != nil {
				panic(err)
			}
		}
	}
	{{ end }}

	{{ if and .Includes .Layouts }}
	// Add the includes to the parse tree of every layout
	include := Includes["{{ index .Includes 0 }}"]
	for _, layout := range Layouts {
		Layouts[layout.Name()], err = layout.AddParseTree(include.Name(), include.Tree)
		if err != nil {
			panic(err)
		}
	}
	{{ end }}

	{{ if and .Layouts .Views }}
	// Add each layout to the parse tree of every view
	for _, layout := range Layouts {
		for _, view := range Views {
			Views[view.Name()], err = view.AddParseTree(layout.Name(), layout.Tree)
			if err != nil {
				panic(err)
			}
		}
	}
	{{ end }}
}
{{ end }}